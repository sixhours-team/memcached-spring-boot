buildscript {
    ext {
        depedencyManagementVersion = '1.0.6.RELEASE'
        propdepsVersion = '0.0.9.RELEASE'
        gradleBintrayVersion = '1.7.3'
        sonarqubeGradleVersion = '2.7'
    }
    repositories {
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:$depedencyManagementVersion")
        classpath("io.spring.gradle:propdeps-plugin:${propdepsVersion}")
        classpath("com.jfrog.bintray.gradle:gradle-bintray-plugin:${gradleBintrayVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeGradleVersion}")
    }
}

ext.JAVA_GRADLE = "$rootDir/gradle/java.gradle"
ext.RELEASE_GRADLE = "$rootDir/gradle/release.gradle"
ext.SONAR_GRADLE = "$rootDir/gradle/sonar.gradle"

allprojects {
    def gitVersion = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            ignoreExitValue true
            commandLine 'git', 'describe', '--tags', '--abbrev=0', '--match', 'v[[:digit:]]*\\.[[:digit:]]*\\.[[:digit:]]*'
            standardOutput = stdout
        }
        def version = stdout.toString().trim()
        return !version.isEmpty() ? version - 'v' : '1.0.0-SNAPSHOT'
    }

    group = "io.sixhours"
    version = gitVersion()
}

subprojects {
    apply from: JAVA_GRADLE
    apply from: RELEASE_GRADLE
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-eclipse'
    apply plugin: 'io.spring.dependency-management'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    jar {
        manifest {
            attributes('Implementation-Title': project.name)
            attributes('Implementation-Version': project.version)
            attributes('Build-Time-ISO-8601': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"))
        }
    }

    repositories {
        jcenter()
    }

    ext {
        springBootVersion = '2.1.10.RELEASE'
        springCloudVersion = 'Greenwich.SR3'
        elasticacheClientVersion = '1.1.1'
        commonsLoggingVersion = '1.2'
        testcontainersVersion = '1.12.3'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            dependency "com.amazonaws:elasticache-java-cluster-client:$elasticacheClientVersion"
            dependency "commons-logging:commons-logging:$commonsLoggingVersion"
            dependency "org.testcontainers:testcontainers:$testcontainersVersion"
        }
    }
}
