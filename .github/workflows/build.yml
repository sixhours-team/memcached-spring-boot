name: Build

on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        java: [ '8', '11', '17' ]
        include:
          - java: 8
            sonar: false
          - java: 11
            sonar: true
          - java: 17
            sonar: false
    name: Build
    if: github.repository == 'sixhours-team/memcached-spring-boot'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Execute Gradle build
        run: |
          echo "Build Branch => Branch [$GITHUB_REF_NAME]"
          ./gradlew build
      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          check_name: Test results (${{ matrix.java }})
          report_paths: memcached-spring-boot-autoconfigure/build/test-results/**/TEST-*.xml
      - name: Run code analysis
        if: ${{ matrix.sonar && github.event_name != 'pull_request'}}
        run: |
          echo "Run SonarQube Analysis => Branch [$GITHUB_REF_NAME]"
          ./gradlew sonar -Dsonar.verbose=true --stacktrace
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
